class  Person(String firstName,String lastName,String father,String mother,Date birthDate){
}

class NameOrEntry is String|Map.Entry<String,Object>;

def <T> N copy(T o, NameOrEntry... elements) -> copy(o,o?getClass(),elements);

def <T,N> N copy(T o,Class<N> newType, NameOrEntry... elements){
    Class c=o.getClass();
    Class c=o.getClass();
//    Set<String> accepted()
//                .filter((x)->switch(x)
//                        is String a -> x && x[0] !in ['+','-'];
//                        is Map.Entry<String,Object> a : a.name ;
//                        else die
//                );
    def accept(String name)-> for(elem in elements){
        switch(elem y)
            y is String a-> {
                switch((a[0] catch '\0') e0){
                    e0 !in ['+','-'] && a==name -> true;
                    e0 == '+' && a[1...]==name  -> true;
                    e0 == '-' && a[1...]==name  -> false;
                    e0 == '+' && a[1...]=="..."  -> true;
                    e0 == '-' && a[1...]=="..."  -> false;
                    else : {}
                }
            y is Map.Entry<String,Object> ->{
                //
            }
        }
        is Map.Entry<String,Object> a : a.name ;
        else die
    }
    for(p in c.publicProperties){

    }
}

Person hammadi("hammadi","aguerbi","ali","fardia",d"2012-12-10");
Person hamma("hammadi"[0..($-1)],"aguerbi","ali","fardia",d"2012-12-10");
Person alia=copyOf(hammadi, ["name":"alia","lastName","-birthDate","+..."]);
Person alia2=copyOf(hammadi, {"name":"alia","lastName"});
Person alia=hammadi with [name="alia",lastName,-age,-...];
